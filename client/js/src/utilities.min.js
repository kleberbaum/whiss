function inflate_long(a) {
    var c = new BigInteger("0", 10);
    a.length % 4 && (a = Array(4 - a.length % 4 + 1).join("\x00") + a);
    for (var b = 0; b < a.length; b += 4)
        c = c.shiftLeft(32), c = c.add(new BigInteger(struct.unpack("I", a.substring(b, b + 4))[0].toString(), 10));
    return c
}

function deflate_long(a, c) {
    a = "number" == typeof a ? new BigInteger(a.toString(), 10) : a.clone();
    c = void 0 == c ? !0 : c;
    for (var b = "", d = new BigInteger("-1", 10), f = new BigInteger("ffffffff", 16); !a.equals(BigInteger.ZERO) && !a.equals(d);) b = struct.pack("I", a.and(f)) + b, a = a.shiftRight(32);
    for (var f = !1, e = 0; e < b.length; ++e) {
        if (a.equals(BigInteger.ZERO) && "\x00" != b.charAt(e)) {
            f = !0;
            break
        }
        if (a.equals(d) && "\u00ff" != b.charAt(e)) {
            f = !0;
            break
        }
    }
    f || (e = 0, b = a.equals(BigInteger.ZERO) ? "\x00" : "\u00ff");
    b = b.substring(e);
    c && (a.equals(BigInteger.ZERO) &&
        128 <= b.charCodeAt(0) && (b = "\x00" + b), a.equals(d) && 128 > b.charCodeAt(0) && (b = "\u00ff" + b));
    return b
}

function toByteArray(a) {
	var bufView = new Uint8Array(a.length);
	for (var i=0; i < a.length; i++) {
		bufView[i] = a.charCodeAt(i);
	}
	return bufView;
}

function fromByteArray(a) {
  return String.fromCharCode.apply(null, new Uint8Array(a));
}

function bytesToWords(a) {
    for (var c = [], b = 0, d = 0; b < a.length; b++, d += 8) c[d >>> 5] |= (a[b] & 255) << 24 - d % 32;
    return c
}

function wordsToBytes(a) {
    for (var c = [], b = 0; b < 32 * a.length; b += 8) c.push(a[b >>> 5] >>> 24 - b % 32 & 255);
    return c
}

function hex2ascii(a) {
    for (var c = "", b = 0; b < a.length; b += 2) c += String.fromCharCode(parseInt(a.substr(b, 2), 16));
    return c
}

function ascii2hex(a) {
    for (var c = "", b = 0; b < a.length; b++) c = 1 == a.charCodeAt(b).toString(16).length ? c + ("0" + a.charCodeAt(b).toString(16)) : c + ("" + a.charCodeAt(b).toString(16));
    return c
}

function setCharAt(a, c, b) {
    return a.substr(0, c) + b + a.substr(c + 1)
};

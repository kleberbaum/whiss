name: Build and Deploy to Cloudflare Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  deployments: write
  statuses: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: cloudflare-pages
      url: ${{ steps.cloudflare_pages_deploy.outputs.url }}
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      deployments: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install
        run: npm --prefix "./client" ci
      - name: Build
        run: npm run --prefix "./client" build
      - name: Publish to Cloudflare Pages
        id: cloudflare_pages_deploy
        uses: cloudflare/pages-action@1
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          projectName: whiss
          directory: ./client/dist
          # Optional: Specify the Wrangler version
          wranglerVersion: '3'
      - name: Add publish URL as commit status
        uses: actions/github-script@v7
        with:
          script: |
            const url = "${{ steps.cloudflare_pages_deploy.outputs.url }}";
            console.log(`Cloudflare Pages URL: ${url}`);
            
            // When "pull_request", context.payload.pull_request?.head.sha is expected SHA.
            // (base: https://github.community/t/github-sha-isnt-the-value-expected/17903/2)
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: 'Cloudflare Pages',
              description: 'Cloudflare Pages deployment',
              state: 'success',
              sha,
              target_url: url,
            });
